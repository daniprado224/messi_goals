total_wins_copa_rey <- sum(as.numeric(total_copa_rey$club_wins), na.rm = TRUE)
total_losses_copa_rey <- length(total_copa_rey$club_wins) - total_wins_copa_rey
names <- c("Wins", "Losses")
values <- c(total_wins_copa_rey, total_losses_copa_rey)
# Create the bar plot
barplot(values, names.arg = names, col = "yellow", main = "Wins vs. Losses Copa Rey", ylab = "Stats", ylim=c(0,60))
# Add value labels on top of the bars
text(x = 1:length(total_copa_rey), y = values, label = values, pos = 3, cex = 0.8, col = "red")
# Define the names of the values
total_wins_supercopa <- sum(as.numeric(total_supercopa$club_wins), na.rm = TRUE)
total_losses_supercopa <- length(total_supercopa$club_wins) - total_wins_supercopa
names <- c("Wins", "Losses")
print(length(total_supercopa))
values <- c(total_wins_supercopa, total_losses_supercopa)
# Create the bar plot
barplot(values, names.arg = names, col = "orange", main = "Wins vs. Losses Supercopa", ylab = "Stats", ylim=c(0,15))
# Add value labels on top of the bars
text(x = 1:length(total_supercopa), y = values, label = values, pos = 3, cex = 0.8, col = "red")
# Define the names of the values
total_wins_world_cup <- sum(as.numeric(total_world_cup$club_wins), na.rm = TRUE)
total_losses_world_cup <- length(total_world_cup$club_wins) - total_wins_world_cup
names <- c("Wins", "Losses")
values <- c(total_wins_world_cup, total_losses_world_cup)
# Create the bar plot
barplot(values, names.arg = names, col = "grey", main = "Wins vs. Losses World Cup", ylab = "Stats", ylim = c(0, 8))
# Add value labels on top of the bars
text(x = 1:length(total_world_cup), y = values, label = values, pos = 3, cex = 0.8, col = "red")
# Define the names of the values
total_wins_uefa_supercup<- sum(as.numeric(total_uefa_supercup$club_wins), na.rm = TRUE)
total_losses_uefa_supercup<- length(total_uefa_supercup$club_wins) - total_wins_uefa_supercup
names <- c("Wins", "Losses")
values <- c(total_wins_uefa_supercup, total_losses_uefa_supercup)
# Create the bar plot
barplot(values, names.arg = names, col = "purple", main = "Wins vs. Losses Supercup", ylab = "Stats", ylim = c(0, 5))
# Add value labels on top of the bars
text(x = 1:length(total_uefa_supercup), y = values, label = values, pos = 3, cex = 0.8, col = "red")
# Define the names of the values
total_wins_ligue1 <- sum(as.numeric(total_ligue1$club_wins), na.rm = TRUE)
total_losses_ligue1 <- length(total_ligue1$club_wins) - total_wins_ligue1
names <- c("Wins", "Losses")
values <- c(total_wins_ligue1, total_losses_ligue1)
# Create the bar plot
barplot(values, names.arg = names, col = "cyan", main = "Wins vs. Losses Ligue 1", ylab = "Stats", ylim = c(0, 25))
# Add value labels on top of the bars
text(x = 1:length(total_ligue1), y = values, label = values, pos = 3, cex = 0.8, col = "red")
season_goals <- data.frame(Season = character(), Total_Goals = numeric(), stringsAsFactors = FALSE)
View(season_goals)
seasons <- unique(data$Season)
numberofSeasons <- length(seasons)
print(seasons)
season_goals <-  seasons
names(data)[names(data) == "V1"] <- "Season"
season_goals <- seasons
names(data)[names(data) == "V1"] <- "Season"
# Create a new dataframe with just the "Goals_Scored" column
season_goals <- data.frame(Season = data$Season)
# View the new dataframe
print(season_goals)
View(season_goals)
# Create a new dataframe with just the "Goals_Scored" column
season_goals <- data.frame(Season = unique(data$Season))
# View the new dataframe
print(season_goals)
View(season_goals)
season_goals$Goals <- NA
# Variable intitialization
current_season <- data$Season[1]
total_goals <- 0
# Step 2: Loop through the dataframe
for (i in 1:nrow(data)) {
if (data$Season[i] == current_season) {
# Accumulate goals for the current season
total_goals <- total_goals + 1
} else {
# Add the accumulated goals to the season_goals dataframe
season_goals <- rbind(season_goals, data.frame(Season = current_season, Total_Goals = total_goals))
# Update to the new season and reset the goals count
current_season <- data$Season[i]
total_goals <- 0
}
}
# Variable intitialization
current_season <- data$Season[1]
total_goals <- 0
# Step 2: Loop through the dataframe
for (i in 1:nrow(data)) {
if (data$Season[i] == current_season) {
# Accumulate goals for the current season
total_goals <- total_goals + 1
} else {
# Add the accumulated goals to the season_goals dataframe
season_goals$Total_Goals[season_goals$Season == current_season] <- total_goals
# Update to the new season and reset the goals count
current_season <- data$Season[i]
total_goals <- 0
}
}
current_season <- data$Season[1]
total_goals <- 1
# Step 2: Loop through the dataframe
for (i in 1:nrow(data)) {
if (data$Season[i] == current_season) {
# Accumulate goals for the current season
total_goals <- total_goals + 1
} else {
# Add the accumulated goals to the season_goals dataframe
season_goals$Total_Goals[season_goals$Season == current_season] <- total_goals
# Update to the new season and reset the goals count
current_season <- data$Season[i]
total_goals <- 0
}
}
current_season <- data$Season[1]
total_goals <- 1
# Step 2: Loop through the dataframe
for (i in 1:nrow(data)) {
if (data$Season[i] == current_season) {
# Accumulate goals for the current season
total_goals <- total_goals + 1
} else {
# Add the accumulated goals to the season_goals dataframe
season_goals$Total_Goals[season_goals$Season == current_season] <- total_goals
# Update to the new season and reset the goals count
current_season <- data$Season[i]
total_goals <- 0
}
}
View(season_goals)
# Variable intitialization
current_season <- data$Season[1]
total_goals <- 1
# Step 2: Loop through the dataframe
for (i in 1:nrow(data)) {
if (data$Season[i] == current_season) {
# Accumulate goals for the current season
total_goals <- total_goals + 1
} else {
# Add the accumulated goals to the season_goals dataframe
season_goals$Total_Goals[season_goals$Season == current_season] <- total_goals
# Update to the new season and reset the goals count
current_season <- data$Season[i]
total_goals <- 1
}
}
View(season_goals)
# Variable intitialization
current_season <- data$Season[1]
total_goals <- 1
# Step 2: Loop through the dataframe
for (i in 0:nrow(data)) {
if (data$Season[i] == current_season) {
# Accumulate goals for the current season
total_goals <- total_goals + 1
} else {
# Add the accumulated goals to the season_goals dataframe
season_goals$Total_Goals[season_goals$Season == current_season] <- total_goals
# Update to the new season and reset the goals count
current_season <- data$Season[i]
total_goals <- 1
}
}
current_season <- data$Season[1]
total_goals <- 1
# Step 2: Loop through the dataframe
for (i in 1:nrow(data)) {
if (data$Season[i] == current_season) {
# Accumulate goals for the current season
total_goals <- total_goals + 1
} else {
# Add the accumulated goals to the season_goals dataframe
season_goals$Total_Goals[season_goals$Season == current_season] <- total_goals
# Update to the new season and reset the goals count
current_season <- data$Season[i]
total_goals <- 1
}
}
season_goals$Total_Goals[season_goals$Season == current_season] <- total_goals
View(season_goals)
season_counts <- table(data$Season)
# Print the counts
print(season_counts)
total_goals <- 0
# Step 2: Loop through the dataframe
for (i in 1:nrow(data)) {
if (data$Season[i] == current_season) {
# Accumulate goals for the current season
total_goals <- total_goals + 1
} else {
# Add the accumulated goals to the season_goals dataframe
season_goals$Total_Goals[season_goals$Season == current_season] <- total_goals
# Update to the new season and reset the goals count
current_season <- data$Season[i]
total_goals <- 1
}
}
View(season_goals)
season_goals$Total_Goals[season_goals$Season == current_season] <- total_goals
View(season_goals)
season_goals<- subset(season_goals, select = -Goals)
View(season_goals)
ggplot(season_goals, aes(x = Season, y = Total_Goals)) +
geom_line(group = 1, color = "blue") +  # Draw the line
geom_point(color = "red") +             # Add points
labs(title = "Goals per Season",
x = "Season",
y = "Total Goals") +
theme_minimal() +                       # Apply a minimal theme
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Load the knitr library
library(knitr)
# Create the table
kable(season_goals, col.names = c("Season", "Total Goals"),
caption = "Total Goals Scored per Season by Lionel Messi")
# Read in data ------------------------------------------------------------
data <- read.csv("/Users/Daniella/Desktop/github/messi_goals/data.csv")
# Get data types for messi scores
score_type <- unique(data$Type)
numberOfCategories <- length(score_type)
print(score_type)
# Clean column from any empty row
library(dplyr)
data <- data %>%
filter(Type != "")
# Get list of clubs
clubs <- unique(data$Club)
numberofClubs <- length(clubs)
print(clubs)
# Get information on competitions played
competitions <- unique(data$Competition)
numberofCompetitions <- length(competitions)
print(competitions)
# Standardize competition names
# Change to Champions League
library(stringr)
data <- data %>%
mutate(Competition = str_replace_all(Competition, "Troph�e des Champions", "Champions League"))
data <- data %>%
mutate(Competition = str_replace_all(Competition, "Trophée des Champions", "Champions League"))
data <- data %>%
mutate(Competition = str_replace_all(Competition, "UEFA Champions League", "Champions League"))
# Correct grammar
data <- data %>%
mutate(Competition = str_replace_all(Competition, "LaLiga", "La Liga"))
# Get information on seasons
seasons <- unique(data$Season)
numberofSeasons <- length(seasons)
print(seasons)
# Standardize the way seasons are displayed on dataset
library(dplyr)
data <- data %>%
mutate(Season = if_else(Season == "11-Dec", "12/11", Season))
data <- data %>%
mutate(Season = if_else(Season == "Dec-13", "12/13", Season))
# Get information on matchday
matchdays <- unique(data$Matchday)
numberofmatchday <- length(matchdays)
print(matchdays)
# Standardize the formatting for dates
data <- data %>%
mutate(Date = str_replace_all(Date, "-", "/"))
# Create new columns for club's and opponent's goals, as well as an additional column telling us if Messi's club won or not
data <- data %>%
mutate(
clubs_goals = if_else(Venue == "H", as.numeric(str_extract(Result, "^[0-9]+")), as.numeric(str_extract(Result, "(?<=:)[0-9]+"))),
opponent_goals = if_else(Venue == "H", as.numeric(str_extract(Result, "(?<=:)[0-9]+")), as.numeric(str_extract(Result, "^[0-9]+"))),
club_wins = if_else(clubs_goals > opponent_goals, 1, 0)
)
# Statistics on the positions Messi plays
positions <- unique(data$Playing_Position)
numberofPositions <- length(positions)
print(positions)
# Standardize positions
data <- data %>%
mutate(Playing_Position = str_replace_all(Playing_Position, "SS ", "SS"))
data <- data %>%
mutate(Playing_Position = str_replace_all(Playing_Position, "CF ", "CF"))
data <- data %>%
mutate(Playing_Position = str_replace_all(Playing_Position, "AM ", "AM"))
data <- data %>%
mutate(Playing_Position = str_replace_all(Playing_Position, "RW ", "RW"))
# Statistics on Messi's opponents
opponents <- unique(data$Opponent)
numberofOpponents <- length(opponents)
print(opponents)
# Statisics on Messi's assists (who assisted him)
assists <- unique(data$Goal_assist)
numberofAssists <- length(assists)
print(assists)
# Clean data from outlier
data <- data %>%
filter(Goal_assist != "\t")
# If the goal did not have someone assist, write none
data$Goal_assist <- ifelse(data$Goal_assist == "", "None", data$Goal_assist)
# Get data on Messi's wins and losses
total_wins <- sum(as.numeric(data$club_wins), na.rm = TRUE)
sprintf("Since the season of 04/05 to 22/23, Messi's teams won %d", total_wins)
total_losses <- length(data$club_wins) - total_wins
sprintf("Since the season of 04/05 to 22/23, Messi's teams lost %d", total_losses)
# Define the names of the values
names <- c("Wins", "Losses")
values <- c(total_wins, total_losses)
# Create the bar plot
barplot(values, names.arg = names, col = "pink", main = "Wins vs. Losses Total", ylab = "Stats", ylim = c(0, 650))
# Add value labels on top of the bars
text(x = 1:length(data), y = values, label = values, pos = 3, cex = 0.8, col = "red")
# Get stats per club  ------------------------------------------------------------
# Divide these wins and losses by the competition played
total_liga <- subset(data, Competition == "La Liga")
total_champions <- subset(data, Competition == "Champions League")
total_copa_rey <- subset(data, Competition == "Copa del Rey")
total_supercopa <- subset(data, Competition == "Supercopa")
total_world_cup <- subset(data, Competition == "FIFA Club World Cup")
total_uefa_supercup <- subset(data, Competition == "UEFA Super Cup")
total_ligue1 <- subset(data, Competition == "Ligue 1")
# Define the names of the values for La Liga
total_wins_liga <- sum(as.numeric(total_liga$club_wins), na.rm = TRUE)
total_losses_liga <- length(total_liga$club_wins) - total_wins_liga
names <- c("Wins", "Losses")
values <- c(total_wins_liga, total_losses_liga)
# Create the bar plot
barplot(values, names.arg = names, col = "blue", main = "Wins vs. Losses Liga", ylab = "Stats", ylim=c(0,450))
# Add value labels on top of the bars
text(x = 1:length(total_liga), y = values, label = values, pos = 3, cex = 0.8, col = "red")
# Define the names of the values for Champions League
total_wins_champions <- sum(as.numeric(total_champions$club_wins), na.rm = TRUE)
total_losses_champions <- length(total_champions$club_wins) - total_wins_champions
names <- c("Wins", "Losses")
values <- c(total_wins_champions, total_losses_champions)
# Create the bar plot
barplot(values, names.arg = names, col = "green", main = "Wins vs. Losses Champions", ylab = "Stats",ylim=c(0,130) )
# Add value labels on top of the bars
text(x = 1:length(total_champions), y = values, label = values, pos = 3, cex = 0.8, col = "red")
# Define the names of the values
total_wins_copa_rey <- sum(as.numeric(total_copa_rey$club_wins), na.rm = TRUE)
total_losses_copa_rey <- length(total_copa_rey$club_wins) - total_wins_copa_rey
names <- c("Wins", "Losses")
values <- c(total_wins_copa_rey, total_losses_copa_rey)
# Create the bar plot
barplot(values, names.arg = names, col = "yellow", main = "Wins vs. Losses Copa Rey", ylab = "Stats", ylim=c(0,60))
# Add value labels on top of the bars
text(x = 1:length(total_copa_rey), y = values, label = values, pos = 3, cex = 0.8, col = "red")
# Define the names of the values
total_wins_supercopa <- sum(as.numeric(total_supercopa$club_wins), na.rm = TRUE)
total_losses_supercopa <- length(total_supercopa$club_wins) - total_wins_supercopa
names <- c("Wins", "Losses")
print(length(total_supercopa))
values <- c(total_wins_supercopa, total_losses_supercopa)
# Create the bar plot
barplot(values, names.arg = names, col = "orange", main = "Wins vs. Losses Supercopa", ylab = "Stats", ylim=c(0,15))
# Add value labels on top of the bars
text(x = 1:length(total_supercopa), y = values, label = values, pos = 3, cex = 0.8, col = "red")
# Define the names of the values
total_wins_world_cup <- sum(as.numeric(total_world_cup$club_wins), na.rm = TRUE)
total_losses_world_cup <- length(total_world_cup$club_wins) - total_wins_world_cup
names <- c("Wins", "Losses")
values <- c(total_wins_world_cup, total_losses_world_cup)
# Create the bar plot
barplot(values, names.arg = names, col = "grey", main = "Wins vs. Losses World Cup", ylab = "Stats", ylim = c(0, 8))
# Add value labels on top of the bars
text(x = 1:length(total_world_cup), y = values, label = values, pos = 3, cex = 0.8, col = "red")
# Define the names of the values
total_wins_uefa_supercup<- sum(as.numeric(total_uefa_supercup$club_wins), na.rm = TRUE)
total_losses_uefa_supercup<- length(total_uefa_supercup$club_wins) - total_wins_uefa_supercup
names <- c("Wins", "Losses")
values <- c(total_wins_uefa_supercup, total_losses_uefa_supercup)
# Create the bar plot
barplot(values, names.arg = names, col = "purple", main = "Wins vs. Losses Supercup", ylab = "Stats", ylim = c(0, 5))
# Add value labels on top of the bars
text(x = 1:length(total_uefa_supercup), y = values, label = values, pos = 3, cex = 0.8, col = "red")
# Define the names of the values
total_wins_ligue1 <- sum(as.numeric(total_ligue1$club_wins), na.rm = TRUE)
total_losses_ligue1 <- length(total_ligue1$club_wins) - total_wins_ligue1
names <- c("Wins", "Losses")
values <- c(total_wins_ligue1, total_losses_ligue1)
# Create the bar plot
barplot(values, names.arg = names, col = "cyan", main = "Wins vs. Losses Ligue 1", ylab = "Stats", ylim = c(0, 25))
# Add value labels on top of the bars
text(x = 1:length(total_ligue1), y = values, label = values, pos = 3, cex = 0.8, col = "red")
# Get stats per position played  ------------------------------------------------------------
# Total games played as AM
total_am_games <- sum(data$Playing_Position == "AM", na.rm = TRUE)
# Total club wins when playing as AM
total_am_wins <- sum(data$club_wins[data$Playing_Position == "AM"], na.rm = TRUE)
total_am_losses <- total_am_games - total_am_wins
# Total games played as CF
total_cf_games <- sum(data$Playing_Position == "CF", na.rm = TRUE)
# Total club wins when playing as CF
total_cf_wins <- sum(data$club_wins[data$Playing_Position == "CF"], na.rm = TRUE)
total_cf_losses <- total_cf_games - total_cf_wins
# Total games played as RW
total_rw_games <- sum(data$Playing_Position == "RW", na.rm = TRUE)
# Total club wins when playing as RW
total_rw_wins <- sum(data$club_wins[data$Playing_Position == "RW"], na.rm = TRUE)
total_rw_losses <- total_rw_games - total_rw_wins
# Total games played as SS
total_ss_games <- sum(data$Playing_Position == "SS", na.rm = TRUE)
# Total club wins when playing as SS
total_ss_wins <- sum(data$club_wins[data$Playing_Position == "SS"], na.rm = TRUE)
total_ss_losses <- total_ss_games - total_ss_wins
# Total games played as LW
total_lw_games <- sum(data$Playing_Position == "LW", na.rm = TRUE)
# Total club wins when playing as LW
total_lw_wins <- sum(data$club_wins[data$Playing_Position == "LW"], na.rm = TRUE)
total_lw_losses <- total_lw_games - total_lw_wins
# Calculate total wins and losses for each playing position
total_games <- c(total_am_games, total_cf_games, total_rw_games, total_ss_games, total_lw_games)
total_wins <- c(total_am_wins, total_cf_wins, total_rw_wins, total_ss_wins, total_lw_wins)
positions <- c("AM", "CF", "RW", "SS", "LW")
# Calculate losses for each position
total_losses <- total_games - total_wins
# Fit Poisson regression model to see significsance between playing position and club wins
model_poisson <- glm(club_wins ~ Playing_Position, data = data, family = poisson)
# Summary of the model
summary(model_poisson)
# Extract coefficients and standard errors
coef_data <- coef(model_poisson)[-1]  # Exclude intercept
se_data <- summary(model_poisson)$coefficients[-1, "Std. Error"]  # Standard errors
# Data frame for coefficients and standard errors
coef_data <- data.frame(
position = names(coef_data),
coef = coef_data,
se = se_data
)
# Calculate confidence intervals
coef_data$lower <- coef_data$coef - 1.96 * coef_data$se
coef_data$upper <- coef_data$coef + 1.96 * coef_data$se
# Plot coefficients with confidence intervals
library(ggplot2)
ggplot(coef_data, aes(x = position, y = coef, ymin = lower, ymax = upper)) +
geom_pointrange(color = "navy") +
labs(title = "Estimated Coefficients of Playing Position on Club Wins",
x = "Playing Position",
y = "Coefficient (Expected Change in Club Wins)") +
theme_minimal()
cat("Coefficients and 95% Confidence Intervals:\n")
print(coef_data)
# Create a new dataframe with just the "Goals_Scored" column
season_goals <- data.frame(Season = unique(data$Season))
season_goals$Goals <- NA
season_goals<- subset(season_goals, select = -Goals)
# View the new dataframe
print(season_goals)
# Variable intitialization
current_season <- data$Season[1]
total_goals <- 0
# Step 2: Loop through the dataframe
for (i in 1:nrow(data)) {
if (data$Season[i] == current_season) {
# Accumulate goals for the current season
total_goals <- total_goals + 1
} else {
# Add the accumulated goals to the season_goals dataframe
season_goals$Total_Goals[season_goals$Season == current_season] <- total_goals
# Update to the new season and reset the goals count
current_season <- data$Season[i]
total_goals <- 1
}
}
season_goals$Total_Goals[season_goals$Season == current_season] <- total_goals
# Checking work
# season_counts <- table(data$Season)
# print(season_counts)
ggplot(season_goals, aes(x = Season, y = Total_Goals)) +
geom_line(group = 1, color = "blue") +  # draw line
geom_point(color = "red") +             # points
labs(title = "Goals per Season",
x = "Season",
y = "Total Goals") +
theme_minimal() +                       # Apply a minimal theme
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Load the knitr library
library(knitr)
kable(season_goals, col.names = c("Season", "Total Goals"),
caption = "Total Goals Scored per Season by Lionel Messi")
# goals per position
positions_played <- data.frame(Playing_Position = unique(data$Playing_Position))
View(positions_played)
positions_played$Goal_totals <- NA
positions_played$Goal_totals[positions_played$Playing_Position == "LW"] <- total_lw_games
View(positions_played)
positions_played$Goal_totals[positions_played$Playing_Position == "AM"] <- total_am_games
View(season_goals)
View(positions_played)
positions_played$Goal_totals[positions_played$Playing_Position == "LW"] <- total_lw_games
positions_played$Goal_totals[positions_played$Playing_Position == "AM"] <- total_am_games
positions_played$Goal_totals[positions_played$Playing_Position == "SS"] <- total_ss_games
positions_played$Goal_totals[positions_played$Playing_Position == "CF"] <- total_cf_games
positions_played$Goal_totals[positions_played$Playing_Position == "RW"] <- total_rw_games
View(positions_played)
ggplot(positions_played, aes(x = "", y = Games_Played, fill = Position)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(title = "Goals Scored by Position")
ggplot(positions_played, aes(x = "", y = Goal_totals, fill = Position)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(title = "Goals Scored by Position")
ggplot(positions_played, aes(x = "", y = Goal_totals, fill = Playing_Position)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(title = "Goals Scored by Position")
ggplot(data, aes(x = Playing_Position, y = Goal_totals)) +
geom_point(color = "red") +
labs(title = "Goals vs Position", x = "Goals", y = "Position")
ggplot(positions_played, aes(x = Playing_Position, y = Goal_totals)) +
geom_point(color = "red") +
labs(title = "Goals vs Position", x = "Goals", y = "Position")
ggplot(positions_played, aes(x = "", y = Goal_totals, fill = Playing_Position)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(title = "Goals Scored by Position")
View(data)
